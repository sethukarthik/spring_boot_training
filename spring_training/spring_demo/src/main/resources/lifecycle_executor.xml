<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">
		
		<context:component-scan base-package="com.spring_demo.lifecycle"></context:component-scan>
		
		<!-- (Shortcut for command -> CTRL + SHIFT + / -->
			
		<bean id="customer" class="com.spring_demo.lifecycle.Customer">
			<property name="userId" value="1"></property>
			<property name="userName" value="MavenUser"></property>
		</bean>
		
		<!-- We can use either Id or Name attribute -->
		<bean id="account" class="com.spring_demo.lifecycle.Account" init-method="afterPropertiesXML" destroy-method="destroyXML">
			<property name="accNum" value="123654789"></property>
			<property name="customer">
				<ref bean="customer"/>
			</property>
		</bean>
		<!-- Here the dependency bean will call after the account -->
		<!-- <bean id="account_1" name="acc_1,acc_2" class="com.spring_demo.lifecycle.Account">
			<property name="accNum" value="123654789"></property>
			<property name="customer">
				<ref bean="customer_1"/>
			</property>
		</bean>
		
		<bean id="customer_1" class="com.spring_demo.lifecycle.Customer">
			<property name="userId" value="2"></property>
			<property name="userName" value="MavenUser"></property>
		</bean> -->
</beans>